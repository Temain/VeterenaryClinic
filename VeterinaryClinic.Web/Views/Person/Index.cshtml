
@{
    ViewBag.Title = "Список клиентов";
    ViewBag.Subtitle = "и их питомцев";
}

<link href="~/Content/card.css" rel="stylesheet" />

@*<h4 class="text-center">Список клиентов</h4>*@
@*<p>Newline is free CSS template by templatemo. Credits go to <a href="https://videos.pexels.com/videos/busy-street-in-the-city-1089" target="_blank">Pexels.com</a> for a video background and <a href="http://unsplash.com" target="_blank">Unsplash</a> for images. Please tell your friends about templatemo and this is a way to help back. Thank you. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque dictum convallis mi. In dapibus auctor dictum donec mattis quis eros ultricies feugiat.</p>*@

<div class="row add-btn">
    <div class="primary-button">
        <a href="@Url.Action("Create", "Person")" class="btn btn-primary header-btn">Добавить</a>
    </div>
</div>

<ul class="cards" data-bind="foreach: Persons">
    <li class="cards__item">
        <div class="card">
            @*<div class="card__image card__image--fence"></div>*@
            <div class="card__content">
                <div class="card__avatar">
                    <img data-bind="attr: { src: SexId() == 2 ? '/Content/Images/girl.png' : '/Content/Images/man.png' }"/>
                </div>
                <div class="card__title">
                    <div data-bind="text: LastName()"></div>
                    <div class="subtitle" data-bind="text: FirstName() + ' ' + MiddleName()"></div>
                    <div class="phone" data-bind="text: 'Тел. ' + Phone() + ''"></div>
                </div>
                <div class="card__actions">
                    <a href="#" data-bind="attr: { href: '/Person/Edit/' + PersonId() }"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>&nbsp;Изменить</a>
                </div>
                <div class="card__smalltitle">Питомцы:</div>
                <div data-bind="foreach: Pets">
                    @*<div class="pet">*@
                        <img data-bind="attr: { src: PetTypeId() == 1 ? '/Content/Images/cat.png' : '/Content/Images/dog.png', title: PetTypeName() }" />
                        <a href="#" data-bind="text: PetName, attr: { href: '/Appointments/Create/' + PetId()}"></a>&nbsp;&nbsp;&nbsp;
                    @*</div>*@
                </div>
                <!-- ko if: LastAppointmentDate() -->
                <p class="card__text" style="margin-top: 1em;">Последняя запись на приём <span data-bind="text: moment(LastAppointmentDate()).format('DD.MM.YYYY')"></span></p>
                <!-- /ko -->
                <!-- ko if: !LastAppointmentDate() -->
                <p class="card__text" style="margin-top: 1em;">Нет ни одной записи на приём</p>
                <!-- /ko -->
            </div>
        </div>
    </li>
</ul>

@section Scripts {
    <script src="~/Scripts/moment-with-locales.js"></script>
    <script>
        var viewModel = new MainViewModel();
        $(function () {
            viewModel.LoadPersons();
            ko.applyBindings(viewModel);
        });

        function PersonViewModel(personViewModel) {
            var self = this;
            self.PersonId = ko.observable(personViewModel.PersonId || '');
            self.LastName = ko.observable(personViewModel.LastName || '');
            self.FirstName = ko.observable(personViewModel.FirstName || '');
            self.MiddleName = ko.observable(personViewModel.MiddleName || '');
            self.Birthday = ko.observable(personViewModel.Birthday || '');
            self.Address = ko.observable(personViewModel.Address || '');
            self.Phone = ko.observable(personViewModel.Phone || '');
            self.SexId = ko.observable(personViewModel.SexId || '');
            self.LastAppointmentDate = ko.observable(personViewModel.LastAppointmentDate || '');

            self.Pets = ko.observableArray([]);
            if (personViewModel.Pets && personViewModel.Pets.length > 0) {
                for (var i = 0; i < personViewModel.Pets.length; i++) {
                    self.Pets.push(new PetViewModel(personViewModel.Pets[i]));
                }
            }
        }

        function PetViewModel(petViewModel) {
            var self = this;

            self.PetId = ko.observable(petViewModel.PetId || '');
            self.PetTypeId = ko.observable(petViewModel.PetTypeId || '');
            self.PetTypeName = ko.observable(petViewModel.PetTypeName || '');
            self.PetName = ko.observable(petViewModel.PetName || '');
        }

        function MainViewModel() {
            var self = this;

            self.Persons = ko.observableArray([]);

            self.LoadPersons = function () {
                $.ajax({
                    method: 'get',
                    url: '/Person/GetPersons',
                    data: {},
                    contentType: "application/json; charset=utf-8",
                    error: function (response) {
                        console.log(response);
                    },
                    success: function (persons) {
                        if (persons && persons.length > 0) {
                            for (var i = 0; i < persons.length; i++) {
                                self.Persons.push(new PersonViewModel(persons[i]));
                            }
                        }
                    }
                });
            };
        }
    </script>
}
